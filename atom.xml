<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平沙荡雁</title>
  <subtitle>心中若有桃花源，何处不是水云间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lsr911.top/"/>
  <updated>2018-01-13T03:02:25.342Z</updated>
  <id>https://lsr911.top/</id>
  
  <author>
    <name>lsr</name>
    <email>lsr@love999.top</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring 中quartz时间配置</title>
    <link href="https://lsr911.top/Spring-%E4%B8%ADquartz%E6%97%B6%E9%97%B4%E9%85%8D%E7%BD%AE.html"/>
    <id>https://lsr911.top/Spring-中quartz时间配置.html</id>
    <published>2018-01-13T02:57:15.000Z</published>
    <updated>2018-01-13T03:02:25.342Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <h3="" id="Spring中quartz时间配置"><a href="#Spring中quartz时间配置" class="headerlink" title="Spring中quartz时间配置"></a>Spring中quartz时间配置<pre><code>这些星号由左到右按顺序代表 ：     *    *     *     *    *     *   *     
格式：                            [秒] [分] [小时] [日] [月] [周] [年] 

序号 说明 是否必填  允许填写的值 允许的通配符 
1  秒  是  0-59    , - * / 
2  分  是  0-59 
   , - * / 
3 小时  是  0-23   , - * / 
4  日  是  1-31   , - * ? / L W 
5  月  是  1-12 or JAN-DEC   , - * / 
6  周  是  1-7 or SUN-SAT   , - * ? / L # 
7  年  否  empty 或 1970-2099  , - * / 
通配符说明: 
* 表示所有值. 例如:在分的字段上设置 &quot;*&quot;,表示每一分钟都会触发。 
? 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为&quot;?&quot; 具体设置为 0 0 0 10 * ? 
- 表示区间。例如 在小时上设置 &quot;10-12&quot;,表示 10,11,12点都会触发。 
, 表示指定多个值，例如在周字段上设置 &quot;MON,WED,FRI&quot; 表示周一，周三和周五触发 
/ 用于递增触发。如在秒上面设置&quot;5/15&quot; 表示从5秒开始，每增15秒触发(5,20,35,50)。在日字段上设置&apos;1/3&apos;所示每月1号开始，每隔三天触发一次。 
L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据是否是润年[leap]), 在周字段上表示星期六，相当于&quot;7&quot;或&quot;SAT&quot;。如果在&quot;L&quot;前加上数字，则表示该数据的最后一个。例如在周字段上设置&quot;6L&quot;这样的格式,则表示“本月最后一个星期五&quot; 
W 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置&quot;15W&quot;，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 &quot;1W&quot;,它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，&quot;W&quot;前只能设置具体的数字,不允许区间&quot;-&quot;). 
小提示 
&apos;L&apos;和 &apos;W&apos;可以一组合使用。如果在日字段上设置&quot;LW&quot;,则表示在本月的最后一个工作日触发(一般指发工资 ) 
# 序号(表示每月的第几个周几)，例如在周字段上设置&quot;6#3&quot;表示在每月的第三个周六.注意如果指定&quot;#5&quot;,正好第五周没有周六，则不会触发该配置(用在母亲节和父亲节再合适不过了) 
小提示 
周字段的设置，若使用英文字母是不区分大小写的 MON 与mon相同. 
常用示例: 
0 0 12 * * ? 每天12点触发 
0 15 10 ? * * 每天10点15分触发 
0 15 10 * * ? 每天10点15分触发 
0 15 10 * * ? * 每天10点15分触发 
0 15 10 * * ? 2005 2005年每天10点15分触发 
0 * 14 * * ? 每天下午的 2点到2点59分每分触发 
0 0/5 14 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发) 
0 0/5 14,18 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发) 
每天下午的 18点到18点59分(整点开始，每隔5分触发) 
0 0-5 14 * * ? 每天下午的 2点到2点05分每分触发 
0 10,44 14 ? 3 WED     3月分每周三下午的 2点10分和2点44分触发 （特殊情况，在一个时间设置里，执行两次或两次以上的情况） 
0 59 2 ? * FRI    每周5凌晨2点59分触发； 
0 15 10 ? * MON-FRI 从周一到周五每天上午的10点15分触发 
0 15 10 15 * ? 每月15号上午10点15分触发 
0 15 10 L * ? 每月最后一天的10点15分触发 
0 15 10 ? * 6L 每月最后一周的星期五的10点15分触发 
0 15 10 ? * 6L 2002-2005 从2002年到2005年每月最后一周的星期五的10点15分触发 
0 15 10 ? * 6#3 每月的第三周的星期五开始触发 
0 0 12 1/5 * ? 每月的第一个中午开始每隔5天触发一次 
0 11 11 11 11 ? 每年的11月11号 11点11分触发(光棍节)
</code></pre></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="WEB" scheme="https://lsr911.top/tags/web/"/>
    
      <category term="JAVA" scheme="https://lsr911.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>js前端小结</title>
    <link href="https://lsr911.top/js%E5%89%8D%E7%AB%AF%E5%B0%8F%E7%BB%93.html"/>
    <id>https://lsr911.top/js前端小结.html</id>
    <published>2018-01-13T02:35:59.000Z</published>
    <updated>2018-01-13T02:55:12.967Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <ul="">
<li><p>关于前端JQuery选择框改变触发不同action事件</p>
<pre><code>$(function (){
 $(&apos;#selectChangeId&apos;).change(function() {
        var index = $(&apos;#selectChangeId&apos;).get(0).selectedIndex;
        if(index == 0) {
            $(&apos;#xzgsqueryform&apos;).attr(&apos;action&apos;, &apos;URL1&apos;);
        } 
        else if(index == 1) {
            $(&apos;#xzgsqueryform&apos;).attr(&apos;action&apos;, &apos;URL2&apos;);
        } else if(index = 2) {
            $(&apos;#xzgsqueryform&apos;).attr(&apos;action&apos;, &apos;URL3&apos;);
        }
    });
});
</code></pre></li>
<li><p>js检查输入框长度并给出提示</p>
<pre><code>function checkmaxsms(vobj,vmax)   {  
  var str=vobj.value;  
  var strlen=str.length;  
  if(strlen&gt;vmax)   {  
  alert(&apos;输入框查询字数超过限制&apos;);  
  eval(vobj.value=str.substr(0,vmax));  
  } 
}  

&lt;div id=&quot;&quot; onblur=&quot;checkmaxsms(this,&apos;200&apos;)&quot;&gt;
</code></pre></li>
<li><p>js下拉框跳转页面根据后台值选择（注意其中”dfbm”如果为数值， $(“#area”).find(“option[value=dfbm]”).attr(“selected”,true); ）也行，但是建议还是采用字符串连接方式，更安全，否则js前端会出现识别不了对象问题。</p>
<pre><code>$(function(){
     var dfbm=&quot;${dfbm!}&quot;;
     if(dfbm){
         $(&quot;#area&quot;).find(&quot;option[value=&apos;&quot;+dfbm+&quot;&apos;]&quot;).attr(&quot;selected&quot;,true); 
     }
});
</code></pre></li>
<li><p>动态获取前台ID</p>
<pre><code>var pdid = &apos;postDetail&apos; + i;
$(&quot;#&quot; + pdid + &quot;&quot;)
</code></pre></li>

</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="WEB" scheme="https://lsr911.top/tags/web/"/>
    
      <category term="JS" scheme="https://lsr911.top/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>oracle导表以及maven导入jar小结</title>
    <link href="https://lsr911.top/oracle%E5%AF%BC%E8%A1%A8%E4%BB%A5%E5%8F%8Amaven%E5%AF%BC%E5%85%A5jar%E5%B0%8F%E7%BB%93.html"/>
    <id>https://lsr911.top/oracle导表以及maven导入jar小结.html</id>
    <published>2018-01-13T02:30:44.000Z</published>
    <updated>2018-01-13T02:34:35.822Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <ul="">
<li><p>关于maven中jar不存在中心仓库，cmd手动导入命令</p>
<pre><code>mvn install:install-file -Dfile=D:/ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=10.2.0.4.0 -Dpackaging=jar -DgeneratePom=true
&lt;dependency&gt;
        &lt;groupId&gt;com.oracle&lt;/groupId&gt;
          &lt;artifactId&gt;ojdbc6&lt;/artifactId&gt;
          &lt;version&gt;10.2.0.4.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre></li>
<li><p>oracele导表命令</p>
<pre><code>1,先从xxx库/用户导出xxx.sql文件
2,再新建一个Windows窗口-&gt;@ +enter(选择xxx.sql文件)
3,运行
</code></pre></li>

</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="WEB" scheme="https://lsr911.top/tags/web/"/>
    
      <category term="JAVA" scheme="https://lsr911.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>关于Spring框架中使用jdbc连接读取数据中断问题小结</title>
    <link href="https://lsr911.top/%E5%85%B3%E4%BA%8ESpring%E6%A1%86%E6%9E%B6%E4%B8%AD%E4%BD%BF%E7%94%A8jdbc%E8%BF%9E%E6%8E%A5%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E5%B0%8F%E7%BB%93.html"/>
    <id>https://lsr911.top/关于Spring框架中使用jdbc连接读取数据中断问题小结.html</id>
    <published>2018-01-13T02:08:50.000Z</published>
    <updated>2018-01-13T02:27:09.478Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <h4="" id="使用jdbc连接中断问题"><a href="#使用jdbc连接中断问题" class="headerlink" title="使用jdbc连接中断问题"></a>使用jdbc连接中断问题<ul>
<li><p>在jdbc持续读取建Lucene索引过程中存在jdbc自动中断问题，一开始使用application.xml 配置maxtimeout 都没用，后来了解到可能是Spring自己的自动事务提交问题，所以要取消Spring自动事务提交，采取手动commit（）；如下面代码就可以避免这个问题，其中@Transactional(propagation=Propagation.NEVER) 意思是取消Spring自动事务，然后采用jdbc手动提交 conn.commit();</p>
<pre><code>/**
 * 新建许可索引
 * @see com.les.gxjxjhqt.manager.SgscxMng#syncSgsXkIndex()
 * 取消Spring 自动事务，采用手动commit，防止jdbc连接中断
 */
@Transactional(propagation=Propagation.NEVER) 
@Override
public String syncSgsXkIndex(String createSyncIndexPathName) {
    Connection conn = null;
    PreparedStatement pstmt = null;
    /*try {
        IndexFiles&lt;TXzxk&gt; deleteIndexFiles = new IndexFiles&lt;TXzxk&gt;(
                indexPath.getXzxkIndexPath());
        deleteIndexFiles.deleteAllIndex();
        System.out.println(&quot;======刪除所有许可索引成功！&quot;);
    } catch (IOException e1) {
        e1.printStackTrace();
    }*/

    long startTime = System.currentTimeMillis();
    IndexFiles&lt;TXzxk&gt; indexFiles = new IndexFiles&lt;TXzxk&gt;(
            indexPath.getXzxkIndexPath()+createSyncIndexPathName);
    try {
        Properties properties = PropertiesLoaderUtils
                .loadAllProperties(&quot;jdbc.properties&quot;);

    String url = properties.getProperty(&quot;db1.url&quot;);
    String driver = properties.getProperty(&quot;db1.driver&quot;);
    String username = properties.getProperty(&quot;db1.user&quot;);
    String password = properties.getProperty(&quot;db1.password&quot;);

    Class.forName(driver);
    conn = DriverManager.getConnection(url, username, password);

    pstmt = conn
            .prepareStatement(&quot;select t.recId, t.XK_WSH,t.XK_XMMC, t.XK_SPLB, t.XK_NR, t.XK_XDR, t.XK_XDR_SHXYM, t.XK_XDR_ZDM,t.XK_XDR_GSDJ,t.XK_XDR_SWDJ, t.XK_XDR_SFZ,t.XK_FR,t.XK_SXQ,t.XK_JZQ, t.XK_XZJG, t.XK_ZT, t.DFBM, t.SJC, t.BZ, t.XK_BM,t.XK_SYFW,t.DEPTID FROM CREDIT_SGS.T_SGS_XZXK t ,t_Sys_Department ts where t.deptid=ts.deptabbr and (t.isvalid is null or t.isvalid = &apos;Y&apos;)  &quot;);
    ResultSet rs = pstmt.executeQuery();
    List&lt;TXzxk&gt; xkList = new ArrayList&lt;TXzxk&gt;();
    int count = 0;
    while (rs.next()) {
        TXzxk xk = new TXzxk();
        xk.setRecId(rs.getString(1));
        xk.setXkWsh(rs.getString(2));
        xk.setXkXmmc(rs.getString(3));
        xk.setXkSplb(rs.getString(4));
        xk.setXkNr(rs.getString(5));
        xk.setXkXdr(rs.getString(6));
        xk.setXkXdrShxym(rs.getString(7));
        xk.setXkXdrZdm(rs.getString(8));
        xk.setXkXdrGsdj(rs.getString(9));
        xk.setXkXdrSwdj(rs.getString(10));
        xk.setXkXdrSfz(rs.getString(11));
        xk.setXkFr(rs.getString(12));
        xk.setXkSxq(rs.getDate(13));
        xk.setXkJzq(rs.getDate(14));
        xk.setXkXzjg(rs.getString(15));
        xk.setXkZt(rs.getString(16));
        xk.setDfbm(rs.getString(17));
        xk.setSjc(rs.getDate(18));
        xk.setBz(rs.getString(19));
        xk.setXkBm(rs.getString(20));
        xk.setXkSyfw(rs.getString(21));
        //对应前台dfbm
        xk.setDeptId(rs.getString(22));
        //新增许可搜索大字段
        //xk.setXkSearchKey(&quot;xkxdr:&quot;+rs.getString(6)+&quot;;dfbm:&quot;+rs.getString(17)+&quot;;xkxzjg:&quot;+rs.getString(15));
        xkList.add(xk);
        count++;

        if (count % 1500 == 0) {
            indexFiles.create(xkList);
            xkList = null;
            xkList = new ArrayList&lt;TXzxk&gt;();
            System.out.println(&quot;======许可索引做了&quot; + count + &quot;个===========&quot;);
        }
    }
    if (!CollectionUtils.isEmpty(xkList)) {
        indexFiles.create(xkList);
        System.out.println(&quot;======许可索引做了&quot; + xkList.size()
                + &quot;个===========&quot;);
    }

    long limitTime = System.currentTimeMillis() - startTime;
    System.out.println(&quot;许可索引新建耗时&quot; + formatDuring(limitTime) + &quot;，共处理&quot;
            + count + &quot;条&quot;);
    System.out.println(&quot;许可索引新建结束了！&quot;);
} catch (Exception e) {
    e.printStackTrace();
} finally {
    try {
        conn.commit();
        IndexWriter writer = indexFiles.getWriter();
        if (writer != null) {
            writer.close();
        }
        if (pstmt != null) {
            pstmt.close();
        }
        if (conn != null) {
            conn.close();
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
    return null;
}
</code></pre></li>
</ul>
<ul>
<li>这个问题曾经纠结了好久，因为网上解决方法都是增加jdbc maxtimeActive的时长以及检验connection 和 preparestatementsql 流是否正常关闭，所以如果这两个检查都没用，可以试下我这个方法。（框架虽好，坑亦多！） </li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="JAVA" scheme="https://lsr911.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Hashmap和List小结</title>
    <link href="https://lsr911.top/Hashmap%E5%92%8CList%E5%B0%8F%E7%BB%93.html"/>
    <id>https://lsr911.top/Hashmap和List小结.html</id>
    <published>2018-01-12T10:48:42.000Z</published>
    <updated>2018-01-13T02:07:26.672Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <h3="" id="List中获取相同元素出现次数，得到元素和次数对应的map"><a href="#List中获取相同元素出现次数，得到元素和次数对应的map" class="headerlink" title="List中获取相同元素出现次数，得到元素和次数对应的map"></a>List中获取相同元素出现次数，得到元素和次数对应的map<pre><code>//获取最外层循环（每个信息类的总数量）
HashMap &lt;String,Integer&gt;mp = new HashMap&lt;String,Integer&gt;();
int tableNameCount = 1;
List tableNameAndCountList = new ArrayList&lt;&gt;();
for(int k = 0; k &lt; tables.size(); k++ ){
    if(mp.containsKey(tables.get(k).get(&quot;tablename&quot;))){
        mp.put(tables.get(k).get(&quot;tablename&quot;).toString(), mp.get(tables.get(k).get(&quot;tablename&quot;)).intValue()+tableNameCount);
        }
    else{
        mp.put(tables.get(k).get(&quot;tablename&quot;).toString(), tableNameCount);
        }
}
</code></pre><h3 id="关于HashMap安全性"><a href="#关于HashMap安全性" class="headerlink" title="关于HashMap安全性"></a>关于HashMap安全性</h3><p> 因为HashTable存在速度慢等问题，所以线程安全的HashMap很有必要，因为是Hashtable是使用synchronized的，所有线程竞争同一把锁；而ConcurrentHashMap不仅线程安全而且效率高，因为它包含一个segment数组，将数据分段存储，给每一段数据配一把锁，也就是所谓的锁分段技术。</p>
<pre><code>//Hashtable
Map&lt;String, String&gt; hashtable = new Hashtable&lt;&gt;();
//synchronizedMap
Map&lt;String, String&gt; synchronizedHashMap = Collections.synchronizedMap(new HashMap&lt;String, String&gt;());
//ConcurrentHashMap
Map&lt;String, String&gt; concurrentHashMap = new ConcurrentHashMap&lt;&gt;();
</code></pre><ul>
<li>什么时候使用ConcurrentHashMap<br>CHM适用于读者数量超过写者时，当写者数量大于等于读者时，CHM的性能是低于Hashtable和synchronized Map的。这是因为当锁住了整个Map时，读操作要等待对同一部分执行写操作的线程结束。CHM适用于做cache,在程序启动时初始化，之后可以被多个请求线程访问。正如Javadoc说明的那样，CHM是HashTable一个很好的替代，但要记住，CHM的比HashTable的同步性稍弱。</li>
<li><p>性能对比<br>这是要靠数据说话的时代，所以不能只靠嘴说CHM快，它就快了。写个测试用例，实际的比较一下这三种方式的效率(源码来源)，下面的代码分别通过三种方式创建Map对象，使用ExecutorService来并发运行5个线程，每个线程添加/获取500K个元素。</p>
<p>  public class CrunchifyConcurrentHashMapVsSynchronizedMap {</p>
<p>  public final static int THREAD_POOL_SIZE = 5;</p>
<p>  public static Map<string, integer=""> crunchifyHashTableObject = null;<br>  public static Map<string, integer=""> crunchifySynchronizedMapObject = null;<br>  public static Map<string, integer=""> crunchifyConcurrentHashMapObject = null;</string,></string,></string,></p>
<p>  public static void main(String[] args) throws InterruptedException {</p>
<pre><code>// Test with Hashtable Object
crunchifyHashTableObject = new Hashtable&lt;&gt;();
crunchifyPerformTest(crunchifyHashTableObject);

// Test with synchronizedMap Object
crunchifySynchronizedMapObject = Collections.synchronizedMap(new HashMap&lt;String, Integer&gt;());
crunchifyPerformTest(crunchifySynchronizedMapObject);

// Test with ConcurrentHashMap Object
crunchifyConcurrentHashMapObject = new ConcurrentHashMap&lt;&gt;();
crunchifyPerformTest(crunchifyConcurrentHashMapObject);
}
public static void crunchifyPerformTest(final Map&lt;String, Integer&gt; crunchifyThreads) throws InterruptedException {

System.out.println(&quot;Test started for: &quot; + crunchifyThreads.getClass());
long averageTime = 0;
for (int i = 0; i &lt; 5; i++) {

    long startTime = System.nanoTime();
    ExecutorService crunchifyExServer = Executors.newFixedThreadPool(THREAD_POOL_SIZE);

    for (int j = 0; j &lt; THREAD_POOL_SIZE; j++) {
        crunchifyExServer.execute(new Runnable() {
            @SuppressWarnings(&quot;unused&quot;)
            @Override
            public void run() {

                for (int i = 0; i &lt; 500000; i++) {
                    Integer crunchifyRandomNumber = (int) Math.ceil(Math.random() * 550000);

                    // Retrieve value. We are not using it anywhere
                    Integer crunchifyValue = crunchifyThreads.get(String.valueOf(crunchifyRandomNumber));

                    // Put value
                    crunchifyThreads.put(String.valueOf(crunchifyRandomNumber), crunchifyRandomNumber);
                }
            }
        });
    }

    // Make sure executor stops
    crunchifyExServer.shutdown();

    // Blocks until all tasks have completed execution after a shutdown request
    crunchifyExServer.awaitTermination(Long.MAX_VALUE, TimeUnit.DAYS);

    long entTime = System.nanoTime();
    long totalTime = (entTime - startTime) / 1000000L;
    averageTime += totalTime;
    System.out.println(&quot;2500K entried added/retrieved in &quot; + totalTime + &quot; ms&quot;);
}
    System.out.println(&quot;For &quot; + crunchifyThreads.getClass() + &quot; the average time is &quot; + averageTime / 5 + &quot; ms\n&quot;);
    }
}
</code></pre></li>
</ul>
<ul>
<li><p>测试结果</p>
<pre><code>Test started for: class java.util.Hashtable
2500K entried added/retrieved in 2018 ms
2500K entried added/retrieved in 1746 ms
2500K entried added/retrieved in 1806 ms
2500K entried added/retrieved in 1801 ms
2500K entried added/retrieved in 1804 ms
For class java.util.Hashtable the average time is 1835 ms

Test started for: class java.util.Collections$SynchronizedMap
2500K entried added/retrieved in 3041 ms
2500K entried added/retrieved in 1690 ms
2500K entried added/retrieved in 1740 ms
2500K entried added/retrieved in 1649 ms
2500K entried added/retrieved in 1696 ms
For class java.util.Collections$SynchronizedMap the average time is 1963 ms

Test started for: class java.util.concurrent.ConcurrentHashMap
2500K entried added/retrieved in 738 ms
2500K entried added/retrieved in 696 ms
2500K entried added/retrieved in 548 ms
2500K entried added/retrieved in 1447 ms
2500K entried added/retrieved in 531 ms
For class java.util.concurrent.ConcurrentHashMap the average time is 792 ms
</code></pre></li>
<li><a href="http://www.importnew.com/21396.html（测试数据来源）" target="_blank" rel="external">http://www.importnew.com/21396.html（测试数据来源）</a></li>
</ul>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="JAVA" scheme="https://lsr911.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>lucene排序问题</title>
    <link href="https://lsr911.top/lucene%E6%8E%92%E5%BA%8F%E9%97%AE%E9%A2%98.html"/>
    <id>https://lsr911.top/lucene排序问题.html</id>
    <published>2017-11-14T02:56:02.000Z</published>
    <updated>2017-11-14T06:11:34.003Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <h2="" id="lucene排序field"><a href="#lucene排序field" class="headerlink" title="lucene排序field"></a>lucene排序field<pre><code>private SortBean getXkSortBean() {
    SortBean sortBean = new SortBean();
    sortBean.setSort(true);
    sortBean.setSortName(&quot;XKSXQ&quot; + AddDateDoc.SORT_PARAM);
    sortBean.setAscending(true);
    sortBean.setSortType(SortField.Type.LONG);
    return sortBean;
}
</code></pre><blockquote>
<p>AddDateDoc</p>
</blockquote>
<pre><code>public class AddDateDoc implements AddDocIntf {
@Override
public Document addDoc(String field, Object obj, Document doc) {
    if(StringUtils.equalsIgnoreCase(field.toUpperCase(), &quot;XKSXQ&quot;) || StringUtils.equalsIgnoreCase(field.toUpperCase(), &quot;CFSXQ&quot;)) {
        doc.add(new NumericDocValuesField(field.toUpperCase() + SORT_PARAM, ((Date)obj).getTime()));
    }
    doc.add(new LongField(field.toUpperCase(), ((Date)obj).getTime(), Field.Store.YES));
    return doc;
}}
</code></pre><blockquote>
<p>其中 NumericDocValuesField 适合long类型排序，SortedDocValuesField为String类型排序，可以自定义组合排序构造方法。</p>
</blockquote>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="WEB" scheme="https://lsr911.top/tags/web/"/>
    
      <category term="JAVA" scheme="https://lsr911.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Myeclipse的快捷键使用</title>
    <link href="https://lsr911.top/eclipse%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE.html"/>
    <id>https://lsr911.top/eclipse的快捷键.html</id>
    <published>2017-08-23T08:33:18.000Z</published>
    <updated>2017-08-23T08:45:05.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <h3="" id="Myeclipse多行注释快捷键及其他快捷键"><a href="#Myeclipse多行注释快捷键及其他快捷键" class="headerlink" title="Myeclipse多行注释快捷键及其他快捷键"></a>Myeclipse多行注释快捷键及其他快捷键<h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Ctrl+Shift+/  //多行注释</div><div class="line">Alt+Shift+J   //模板注释</div></pre></td></tr></table></figure>
<h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Ctrl+Shift+F  //格式化文件Format Document。</div></pre></td></tr></table></figure>
<h4 id="编辑，查找"><a href="#编辑，查找" class="headerlink" title="编辑，查找"></a>编辑，查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Ctrl+D	//删除当前行。</div><div class="line">Ctrl+1 	//快速修复(最经典的快捷键,就不用多说了)</div><div class="line">Ctrl+Alt+↓ 	//复制当前行到下一行(复制增加)</div><div class="line">Ctrl+Alt+↑ 	//复制当前行到上一行(复制增加)</div><div class="line">Alt+↓ 	//当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)</div><div class="line">Alt+↑ 	//当前行和上面一行交互位置(同上)</div><div class="line">Ctrl+L 	//定位在某行 (对于程序超过100的人就有福音了)</div><div class="line">Ctrl+T 	//快速显示当前类的继承结构</div><div class="line">Ctrl+J 	//正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes line中显示没有)</div><div class="line">Ctrl+Shift+J 	//反向增量查找(和上条相同,只不过是从后往前查)</div><div class="line">Alt+Shift+R 	//重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力)</div><div class="line">Alt+Shift+M 	//抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)</div><div class="line">Ctrl+F 	//用于查找你Editer中你想查找的变量，并可以修改名字。</div><div class="line">ctrl+<span class="built_in">shift</span>+O	//自动导入所有未导入的包</div><div class="line">ctrl+<span class="built_in">shift</span>+M	//一个类一个类的导入,action 点中dao(service)的方法再 CTRL+T可以直接到实现类 而不是接口</div></pre></td></tr></table></figure></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="JAVA" scheme="https://lsr911.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>photo</title>
    <link href="https://lsr911.top/photo.html"/>
    <id>https://lsr911.top/photo.html</id>
    <published>2017-07-22T09:52:42.000Z</published>
    <updated>2017-07-22T10:25:34.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p=""><a href="/images/sh.jpeg" class="gallery-item"><img src="/images/sh.jpeg" alt=""></a><p></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>金庸小说中的诗词</title>
    <link href="https://lsr911.top/jingyong.html"/>
    <id>https://lsr911.top/jingyong.html</id>
    <published>2017-07-16T07:18:53.000Z</published>
    <updated>2017-08-03T17:20:54.098Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <h2="" id="《天龙八部》"><a href="#《天龙八部》" class="headerlink" title="《天龙八部》"></a>《天龙八部》<h3 id="《天龙八部》的回目成五首词，具体如下："><a href="#《天龙八部》的回目成五首词，具体如下：" class="headerlink" title="《天龙八部》的回目成五首词，具体如下："></a>《天龙八部》的回目成五首词，具体如下：</h3><pre><code>少年游·金庸

青衫磊落险峰行，玉璧月华明。马疾香幽，崖高人远，微步毂纹生。
谁家子弟谁家院，无悔计多情。虎啸龙吟，换巢鸾凤，剑气碧烟横。

苏幕遮·金庸

向来痴，从此醉。水榭听香，指点群豪戏。剧饮千杯男儿事。杏子林中，商略平生义。
昔时因，今日意。胡汉恩仇，须倾英雄泪。虽万千人吾往矣，悄立雁门，绝壁无余字。

破阵子·金庸

千里茫茫若梦，双眸粲粲如星。塞上牛羊 空许约，烛畔鬓云有旧盟。莽苍踏雪行。
赤手屠龙搏虎，金戈荡寇鏖兵。草木残生颅铸铁，虫豸凝寒掌作冰。挥洒缚豪英。

洞仙歌·金庸

输赢成败，又争由人算。且自逍遥没人管。奈天昏地暗，斗转星移。
风骤紧，缥缈风头云乱。红颜弹指老，刹那芳华。梦里真真语真幻.
同一笑，到头万事俱空。胡涂醉，情长计短。
解不了，名疆系嗔贪。却试问：几时把痴心断？

水龙吟·金庸

燕云十八飞骑，奔腾如虎风烟举。老魔小丑，岂堪一击，胜之不武。
王霸雄图，血海深仇，尽归尘土。念枉求美眷，良缘安在，枯井底，暗泥处。 
酒罢问君三语，为谁开茶花满路。王孙落魄，怎生消得，杨枝玉露？
敝屣荣华，浮云生死，此身何惧？教单于折剪，六军辟易，愤英雄怒！


段誉所吟“波渺渺，柳依依，孤村芳颤远，斜日杏花飞”。

出处：《江南春》【宋】寇准

波渺渺，柳依依，孤村芳颤远，斜日杏花飞。江南春尽离肠远，蘋满汀洲人未归。
</code></pre></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="阅读" scheme="https://lsr911.top/categories/read/"/>
    
    
      <category term="武侠" scheme="https://lsr911.top/tags/wuxia/"/>
    
      <category term="文艺" scheme="https://lsr911.top/tags/literature/"/>
    
  </entry>
  
  <entry>
    <title>测试用例</title>
    <link href="https://lsr911.top/Test.html"/>
    <id>https://lsr911.top/Test.html</id>
    <published>2017-07-16T03:33:38.000Z</published>
    <updated>2017-07-16T07:24:45.494Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">今天很开心！<p></p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
      <category term="技术" scheme="https://lsr911.top/categories/techology/"/>
    
    
      <category term="WEB" scheme="https://lsr911.top/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lsr911.top/hello-world.html"/>
    <id>https://lsr911.top/hello-world.html</id>
    <published>2017-07-15T14:08:15.699Z</published>
    <updated>2017-07-20T08:28:20.155Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<p></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<h3 id="Clean-and-Run"><a href="#Clean-and-Run" class="headerlink" title="Clean and Run"></a>Clean and Run</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server --debug</div></pre></td></tr></table></figure>
<h3 id="Insert-image"><a href="#Insert-image" class="headerlink" title="Insert image"></a>Insert image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![你想输入的替代文字](xxxx/图片名.jpg)</div></pre></td></tr></table></figure>
<p><strong>注意：</strong>xxxx是这个md文件的名字，也是同名文件夹的名字，你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。</p>
</div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {
        var options = {
            selector: '.gallery-item'
        };
        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);
        }</script>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css&quot;&gt;&lt;div class=&quot;.article-g
    
    </summary>
    
    
  </entry>
  
</feed>
